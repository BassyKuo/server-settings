#!/bin/sh

# Add deny hosts into /etc/hosts.deny from /var/log/fail2ban.log and /var/log/auth.log (except 140.114.*)
# And Back-up /home/hosts-monitor.report

# ==== /etc/crond.hourly/hosts-protect @ 2018/1/16 by Bass <aaammmyyy27@gmail.com> ====

Date=$(date -d "1 hour ago" '+%h %e %H %F %u')
set $Date
M=$1
d=$2
h=$3
F=$4
week=$5
#hosts_deny=/etc/hosts.deny
#report=/home/hosts-monitor.report
#shortrepo=/etc/ssh/sshd_banner
hosts_deny="$PWD/hosts.deny"
report="$PWD/hosts-monitor.report"
shortrepo="$PWD/sshd_banner"

# [Back-up] at Monday 00:00
if [ $week -eq 1 ] && [ $h -eq 0 ]; then
	for i in $(seq 3 -1 1); do
		mv $report.$i $report.$(($i+1))
	done
	mv $report $report.1
	touch $report
fi

# Invalid users and failed password users from /var/log/auth.log*
warning=$(zgrep "^${M}\s\+${d}\s\+${h}:.* Invalid user .*[0-9]$" /var/log/auth.log* | \
	awk '{print "'${F}' "$3" sshd Invalid-User "$8" "$10";"}')
brute_force=$(zgrep "^${M}\s\+${d}\s\+${h}:.* pam_unix(sshd:auth):.* rhost=[0-9\.]\+  user=" /var/log/auth.log* | \
	awk '{print "'${F}' "$3" sshd Failed-Password "$15" "$14";"}' | sed -e 's/user=//g;s/rhost=//g')
## Exclude specific users
#brute_force=$(echo $brute_force | tr ';' '\n' | awk '$6 !~ /allenchen0958/  && $6 !~ /bass/ {print}')

# [hosts.deny] Banned ip from /var/log/fail2ban.log*
# [hosts.deny] Repeated invalid users and failed password users from /var/log/auth.log*
fail2ban_ip=$(zgrep "${F}\s\+${h}:.* Ban" /var/log/fail2ban.log* | awk 'NF>0{print $8}')
retry_ip=$(echo $warning | tr ';' '\n' | awk 'NF>0{print $6}' | uniq -d)
bf_ip=$(echo $brute_force | tr ';' '\n' | awk 'NF>0{print $6}')

# Ban ip
ban_ip=$(echo "$fail2ban_ip $retry_ip $bf_ip" | tr ' ' '\n' | awk 'NF>0{print $1}' | sort -n | uniq | grep -v '140\.114\.[0-9]\+\.[0-9]\+')
echo "$ban_ip" | tr ' ' '\n' | awk 'NF>0{print "ALL: "$1}' >> $hosts_deny


# [hosts-monitor.report] Invalid users login from /var/log/auth.log*
# [hosts-monitor.report] Failed password users login from /var/log/auth.log*
#SUFFIX_FORMAT="%-10s %-8s %-18s %-15s %-16s %-5s\n"
#LINE_LENGTH=84
#CMD=""; test $h -eq 0 && CMD="-a $report"
#echo "" | \
	#awk	-v "format=$SUFFIX_FORMAT" -v "len=$LINE_LENGTH" \
		#'BEGIN { for(i=1;i<=len;i++) printf "-"; printf "\n" }
		#BEGIN { printf "%-7s "format, "Date", "Time", "Service", "Event", "UserID", "IP", "" }
		#BEGIN { for(i=1;i<=len;i++) printf "-"; printf "\n" }' | tee $shortrepo | tee $CMD > /dev/null

#echo "$warning$brute_force" | tr ';' '\n' | sort | \
	#awk -v "ban_ip=$ban_ip" -v "format=$SUFFIX_FORMAT" \
		#'NF>0  { if(index(ban_ip, $7)) $8="Ban";
				#printf "%-3s %2s  "format, $1, $2, $3, $4, $5, $6, $7, $8 }' | tee -a $shortrepo >> $report

#echo "$(date '+%F %R')" | \
	#awk -v "len=$LINE_LENGTH" \
		#'BEGIN { for(i=1;i<=len/3+1;i++) printf "-"; }
		#{ printf "[ %s %s FOUND ]", $1, $2 }
		#{ for(i=1;i<=len/3+1;i++) printf "-"; printf "\n\n" }' | tee -a $shortrepo > /dev/null

(echo "Date Time Service Event UserID IP Status" ; 
 echo "$warning$brute_force" | tr ';' '\n' | sort | \
	awk -v "ban_ip=$ban_ip" \
		'NF>0  { if(index(ban_ip, $6)) $0=$0" Ban"; print $0 }') | column -t -s' ' | sed '1 s/\(^.*$\)/\1  /' | tee $shortrepo > /dev/null


